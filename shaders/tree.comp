#version 430

layout(local_size_x = 32, local_size_y = 1, local_size_z = 1) in;

layout(std430, binding = 0) buffer OutputInstanceData {
    vec4 OutputInstances[];
};

layout(std430, binding = 1) buffer InputInstanceData {
    vec4 InputInstances[];
};

layout(binding = 2) uniform atomic_uint atomicCount;

bool test(vec4 v) {
	return (dot(v.xyz, vec3(1.0, 0.0, 0.0)) > 0.0);
}

void main() {
    uint id = gl_GlobalInvocationID.x;

    uint index = atomicCounterIncrement(atomicCount);

    if (test(InputInstances[id])) {
        OutputInstances[index] = InputInstances[id];
    }
}